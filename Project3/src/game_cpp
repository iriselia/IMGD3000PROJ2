// Engine includes
//#include <vld.h>
#include "GameManager.h"
#include "LogManager.h"
#include "WorldManager.h"
#include <direct.h>

#include "ExampleObject.h"

int main(int argc, char *argv[])
{
	LogManager &log_manager = LogManager::getInstance();
	// Start up Game Manager.
	GameManager &game_manager = GameManager::getInstance();
	if (game_manager.startUp())
	{
		log_manager.writeLog("Error starting game manager!");
		game_manager.shutDown();
		return 0;
	}

	// Set flush of logfile during development (when done, make false).
	log_manager.setFlush(true);


	//mark fore delete test
 	auto a = new ExampleObject();
 	auto& worldManager = WorldManager::getInstance();
	worldManager.markForDelete(a);
	log_manager.writeLog("Main: Second ExampleObject marked for delete.\n");

	//Although I used different solidness in here
	//It is just do demonstrate different object types and how they get rendered in the correct layer.
	//render color test
	// should be yellow
	auto b = new ExampleObject();
	b->setSolidness(SOFT);
	b->setPosition(Position(0, 1));

	//should be rendered in red
	auto c = new ExampleObject();
	c->setSolidness(HARD);
	c->setPosition(Position(1, 1));
	c->setAltitude(0);

	//should be blue
	auto d = new ExampleObject();
	d->setSolidness(SPECTRAL);
	d->setPosition(Position(2, 1));
	d->setAltitude(2);

	//collision test
	auto e = new ExampleObject();
	e->setSolidness(HARD);
	e->setXVelocity(1);
	e->setPosition(Position(0, 2));


	auto f = new ExampleObject();
	f->setSolidness(HARD);
	f->setPosition(Position(20, 2));
	f->setAltitude(0);

	//render layer test
	auto g = new ExampleObject();
	g->setSolidness(HARD);
	g->setPosition(Position(0, 3));
	f->setAltitude(0);

	auto h = new ExampleObject();
	h->setSolidness(SPECTRAL);
	h->setPosition(Position(0, 3));
	h->setAltitude(1);

	//out event test
	auto i = new ExampleObject();
	i->setSolidness(SPECTRAL);
	i->setPosition(Position(40, 0));
	i->setXVelocity(-1);
	// Run game (this blocks until game loop is over).
	game_manager.run();

	// Shut everything down.
	game_manager.shutDown();
	return 0;
}
